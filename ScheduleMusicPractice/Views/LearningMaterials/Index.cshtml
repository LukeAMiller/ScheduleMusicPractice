@model IEnumerable<ScheduleMusicPractice.Models.LearningMaterial>
@using Microsoft.AspNetCore.Identity
@* have to have UserManager for verifying identity *@

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@{
    ViewData["Title"] = "Index";
}



<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table table-bordered table-striped">
    <thead class="thead-dark">
        <tr>

            <th>
                @Html.DisplayNameFor(model => model.instrument)
            </th>
            <th>Learning Link</th>
            <th>Your Rating </th>
            <th>Average Rating</th>
            
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>

            <td>
                @Html.DisplayFor(modelItem => item.instrument.Name)
            </td>

            <td>
                <a href=@item.Name>@item.Name</a>

            </td>


            <td>
                @* foreach again for the current users rating and verifying user with if statement *@
                @foreach (var rank in item.rankings)
                {
                    @if (rank.UserId == @UserManager.GetUserAsync(User).Result.Id)
                    {
                        @Html.DisplayFor(modelitem => rank.Rating);

                    }

                }
            </td>
            @* very similar the the previous statements but to display the Average Rating(i called it Sum)xD *@

            @if (item.rankings.Any())
            {
                <td>@item.Sum()</td>
            }

            @* verifying if there are any rankings that the user has made for the link and displaying an edit button for the ranking or displaying a create rating button also an extra td to make it in the correct column *@
            @if (item.rankings.Any(r => r.UserId == @UserManager.GetUserAsync(User).Result.Id))
            {



                @foreach (var rank in item.rankings)
                {@if (rank.UserId == @UserManager.GetUserAsync(User).Result.Id)
                    {
                        <td>
                            <a asp-controller="Rankings" asp-action="Edit" asp-route-id="@rank.Id">Change Your Rating</a>
                        </td>
                    }
            }
            }
            else
            {
                <td>
                    <a asp-controller="Rankings" asp-action="Create" asp-route-id="@item.id">Rate this Learning Material</a>
                </td>
            }
            @* verifying if there are ratings for the rank and displaying a details button if so *@
    
            @if (item.rankings.Any())
                {
                    <td>
                        <a asp-controller="Rankings" asp-action="Details" asp-route-id="@item.id">Ratings</a>
                    </td>
                }
        
        </tr>
        }
    </tbody>
</table>
